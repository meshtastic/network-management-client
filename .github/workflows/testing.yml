name: "Testing Suite"
on: [push, pull_request]

jobs:
  rust-test:
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest, ubuntu-22.04-arm]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init

      - name: Initialize Rust Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies (ARM only)
        if: matrix.platform == 'ubuntu-22.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libssl-dev

      - name: Run test suite
        working-directory: ./src-tauri
        run: cargo test

  ui-test:
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest, ubuntu-22.04-arm]
        node-version: [22]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install frontend dependencies
        run: pnpm install

      - run: pnpm run ui:test
